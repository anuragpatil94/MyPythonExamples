from linked_list import linked_list
from BST import binary_search_tree
from doubly_linked_list import DLL

# print("--------------------------------------------------LinkedList-----------------------------------------------")
# # help(linked_list)

# linkList = linked_list()
# print("Appending Elements")
# linkList.append(1)
# linkList.append("Two")
# linkList.append(3)
# linkList.append("Four")
# linkList.append(5)
# linkList.append("Six")
# linkList.display()
# print("Length of the Linked List: %d" % (linkList.length()))
# print("Delete 2nd element")
# print(linkList.erase(1))
# linkList.display()
# print("Get 4th element:", linkList.get(3))
# print(linkList.head)

print("--------------------------------------------Doubly Linked List---------------------------------------------")
help(DLL)
# l = DLL()
# l.append(1)
# l.append(2)
# l.append(3)
# l.append(4)
# l.append(5)
# l.append(6)
# l.append(7)
# l.append(8, 2)
# l.append(8, 1)
# l.append(8, 0)
# l.append(8, l.length())
# # l.append(8, l.length()+1)
# print(l.firstNode.data)
# print(l.lastNode.data)
# l.display()


print("--------------------------------------------Binary Search Tree---------------------------------------------")

# print("Fill tree with random Integers:")
# tree=binary_search_tree()
# tree=tree.fill_tree(20,50)
# tree.insert(1)
# tree.print_tree()
# print()
# print("The Height of the Tree is:", tree.height())
# print("Is 1 present in Tree? ",tree.find(1))
# tree.delete_value(1)
# tree.print_tree()
# tree = binary_search_tree()
# tree.insert(10)
# tree.insert(3)
# tree.insert(4)
# tree.insert(2)
# tree.insert(1)
# tree.insert(5)
# tree.insert(6)
# tree.insert(7)
# tree.insert(14)
# tree.insert(12)
# tree.insert(16)
# tree.insert(13)
# tree.insert(15)
# tree.insert(17)
# print("The Height of the Tree is:", tree.height())
# tree.print_tree()
